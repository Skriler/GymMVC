@model AddCoachViewModel
@{
    ViewData["Title"] = "Create coach";

    var gendersSelectedListItems = new List<SelectListItem>();
    foreach (Gender gender in Model.Genders)
    {
        gendersSelectedListItems.Add(new SelectListItem { Value = gender.Id.ToString(), Text = gender.Title });
    }

    var positionsSelectedListItems = new List<SelectListItem>();
    foreach (Position position in Model.Positions)
    {
        positionsSelectedListItems.Add(new SelectListItem { Value = position.Id.ToString(), Text = position.Title });
    }

    var specializationsSelectedListItems = new List<SelectListItem>();
    foreach (Specialization specialization in Model.Specializations)
    {
        specializationsSelectedListItems.Add(new SelectListItem { Value = specialization.Id.ToString(), Text = specialization.Title });
    }
}

<div class="form-horizontal">
    <h2 class="text-center">@ViewData["Title"]</h2>

    @using (Html.BeginForm(
      actionName: "Create",
      controllerName: "Coaches",
      method: FormMethod.Post
      ))
    {
        <p>* - Required</p>
        @Html.ValidationSummary()
        <input id="MinDate" name="MinDate" type="hidden" value=@Model.MinBirthDate.ToString("yyyy-MM-dd") />
        <input id="MaxDate" name="MaxDate" type="hidden" value=@Model.MaxBirthDate.ToString("yyyy-MM-dd") />
        <div>
            @Html.LabelFor(model => model.FirstName)* <br />
            @Html.EditorFor(model => model.FirstName)
            @Html.ValidationMessageFor(model => model.FirstName)
        </div>
        <br />
        <div>
            @Html.LabelFor(model => model.LastName)* <br />
            @Html.EditorFor(model => model.LastName)
            @Html.ValidationMessageFor(model => model.LastName)
        </div>
        <br />
        <div>
            <b>@Html.LabelFor(model => model.BirthDate)</b> <br />
            <input id="birthDate" name="birthDate" class="datepicker" value="@Model.BirthDate.ToString("yyyy-MM-dd")" readonly="readonly">
            @Html.ValidationMessageFor(model => model.BirthDate)
        </div>
        <br />
        <div>
            @Html.LabelFor(model => model.Email)* <br />
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>
        <br />
        <div>
            @Html.LabelFor(model => model.PhoneNumber) <br />
            @Html.EditorFor(model => model.PhoneNumber)
            @Html.ValidationMessageFor(model => model.PhoneNumber)
        </div>
        <br />
        <div>
            @Html.LabelFor(model => model.GenderId)* <br />
            @Html.DropDownListFor(model => model.GenderId, gendersSelectedListItems)
            @Html.ValidationMessageFor(model => model.GenderId)
        </div>
        <br />
        <div>
            @Html.LabelFor(model => model.PositionId)* <br />
            @Html.DropDownListFor(model => model.PositionId, positionsSelectedListItems)
            @Html.ValidationMessageFor(model => model.PositionId)
        </div>
        <br />
        <div>
            @Html.LabelFor(model => model.SpecializationId)* <br />
            @Html.DropDownListFor(model => model.SpecializationId, specializationsSelectedListItems)
            @Html.ValidationMessageFor(model => model.SpecializationId)
        </div>
        <br />
        <div>
            @Html.LabelFor(model => model.Password)* <br />
            @Html.PasswordFor(model => model.Password)
            @Html.ValidationMessageFor(model => model.Password)
        </div>
        <br />
        <div>
            <input type="submit" value="Create" class="btn btn-success" />
        </div>
        <br />
    }
</div>

@section Scripts
{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    @{await Html.RenderPartialAsync("_DatePickerPartial");}
}
